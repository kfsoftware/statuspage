// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type Check interface {
	IsCheck()
}

type CheckExecution struct {
	ID            string    `json:"id"`
	ExecutionTime time.Time `json:"executionTime"`
	Message       string    `json:"message"`
	ErrorMsg      string    `json:"errorMsg"`
	Status        string    `json:"status"`
}

type CreateHTTPCheckInput struct {
	ID        string `json:"id"`
	Frecuency string `json:"frecuency"`
	URL       string `json:"url"`
}

type CreateIcmpCheckInput struct {
	ID        string `json:"id"`
	Frecuency string `json:"frecuency"`
	Address   string `json:"address"`
}

type CreateTCPCheckInput struct {
	ID        string `json:"id"`
	Frecuency string `json:"frecuency"`
	Address   string `json:"address"`
}

type CreateTLSCheckInput struct {
	ID        string  `json:"id"`
	Frecuency string  `json:"frecuency"`
	Address   string  `json:"address"`
	RootCAs   *string `json:"rootCAs"`
}

type DeleteResponse struct {
	ID string `json:"id"`
}

type HTTPCheck struct {
	ID          string     `json:"id"`
	Identifier  string     `json:"identifier"`
	Frecuency   string     `json:"frecuency"`
	URL         string     `json:"url"`
	Status      string     `json:"status"`
	LatestCheck *time.Time `json:"latestCheck"`
	Message     string     `json:"message"`
	ErrorMsg    string     `json:"errorMsg"`
}

func (HTTPCheck) IsCheck() {}

type IcmpCheck struct {
	ID          string     `json:"id"`
	Identifier  string     `json:"identifier"`
	Frecuency   string     `json:"frecuency"`
	Address     string     `json:"address"`
	Status      string     `json:"status"`
	LatestCheck *time.Time `json:"latestCheck"`
	Message     string     `json:"message"`
	ErrorMsg    string     `json:"errorMsg"`
}

func (IcmpCheck) IsCheck() {}

type PollResult struct {
	Took int `json:"took"`
}

type TCPCheck struct {
	ID          string     `json:"id"`
	Identifier  string     `json:"identifier"`
	Frecuency   string     `json:"frecuency"`
	Address     string     `json:"address"`
	Status      string     `json:"status"`
	LatestCheck *time.Time `json:"latestCheck"`
	Message     string     `json:"message"`
	ErrorMsg    string     `json:"errorMsg"`
}

func (TCPCheck) IsCheck() {}

type TLSCheck struct {
	ID          string     `json:"id"`
	Identifier  string     `json:"identifier"`
	Frecuency   string     `json:"frecuency"`
	Address     string     `json:"address"`
	Status      string     `json:"status"`
	LatestCheck *time.Time `json:"latestCheck"`
	Message     string     `json:"message"`
	ErrorMsg    string     `json:"errorMsg"`
}

func (TLSCheck) IsCheck() {}
